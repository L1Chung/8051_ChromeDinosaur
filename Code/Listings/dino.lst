C51 COMPILER V9.59.0.0   DINO                                                              05/23/2020 06:50:41 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE DINO
OBJECT MODULE PLACED IN .\Objects\dino.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE dino.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\dino
                    -.lst) TABS(2) OBJECT(.\Objects\dino.obj)

line level    source

   1          #include <AT89X51.H>
   2          #include <string.h>
   3          #include <intrins.h>
   4          #define RS P1_0
   5          #define RW P1_1
   6          #define E P1_2
   7          #define DB P2
   8          
   9          unsigned char code back[] = {0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
             - 0xc0, 0xff, 0xff, 
  10          0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xef, 0xff, 0xff, 0xff, 0xff, 0xff, 0x88, 0x3f, 0xff, 
  11          0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xff, 0x8e, 0x1f, 0xff, 
  12          0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc3, 0xff, 0xff, 0xff, 0xff, 0xff, 0x87, 0x8f, 0xff, 
  13          0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc1, 0xff, 0xff, 0x80, 0x00, 0x1f, 0xc7, 0x87, 0xff, 
  14          0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x99, 0xff, 0xff, 0x00, 0x00, 0x0f, 0xe3, 0xc7, 0xff, 
  15          0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0x18, 0xff, 0xfc, 0x01, 0x39, 0xc7, 0xe3, 0xe3, 0xff, 
  16          0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xfe, 0x3c, 0x3f, 0xfc, 0x77, 0xff, 0xe1, 0xe3, 0xe1, 0xff, 
  17          0xff, 0xff, 0xff, 0xff, 0xff, 0xf2, 0x70, 0xff, 0x0f, 0xf9, 0xff, 0xff, 0xf8, 0xe3, 0xf1, 0xff, 
  18          0xff, 0xff, 0xff, 0xff, 0xff, 0xf2, 0x38, 0xff, 0x1f, 0xf1, 0xff, 0xff, 0xf8, 0xe3, 0xf1, 0xff, 
  19          0xff, 0xff, 0xff, 0xff, 0xff, 0xf2, 0x3e, 0x3c, 0x7f, 0xc1, 0xff, 0xff, 0xf8, 0xe3, 0xf9, 0xff, 
  20          0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0x3f, 0x18, 0xff, 0xcf, 0xff, 0xff, 0xf1, 0xe3, 0xf9, 0xff, 
  21          0xff, 0xff, 0xff, 0xff, 0xfe, 0x07, 0x0f, 0x99, 0xff, 0xcf, 0xff, 0xff, 0xfc, 0xe3, 0xf9, 0xff, 
  22          0xff, 0xff, 0xff, 0xff, 0xfc, 0x1f, 0xc1, 0xc1, 0xff, 0xc3, 0xff, 0xff, 0xf8, 0xe3, 0xf9, 0xff, 
  23          0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xf9, 0xc3, 0xff, 0xe7, 0xff, 0xff, 0xc1, 0xe3, 0xf9, 0xff, 
  24          0xff, 0xff, 0xff, 0xff, 0xfc, 0x1f, 0xc1, 0xe7, 0xff, 0xe7, 0xff, 0xff, 0xc3, 0xe3, 0xf9, 0xff, 
  25          0xff, 0xff, 0xff, 0xff, 0xfc, 0x07, 0x03, 0xef, 0xff, 0xe0, 0x7f, 0xfb, 0x87, 0xe3, 0xf9, 0xff, 
  26          0xff, 0xff, 0xff, 0xff, 0xff, 0xc7, 0x1f, 0xff, 0xff, 0xf0, 0x7b, 0xf8, 0x1f, 0xe3, 0xf9, 0xff, 
  27          0xff, 0xff, 0xff, 0xff, 0xff, 0xe2, 0x3f, 0xff, 0xff, 0xfe, 0x00, 0xe0, 0x7f, 0xe3, 0xf9, 0xff, 
  28          0xff, 0xff, 0xff, 0xff, 0xff, 0xf2, 0x3f, 0xff, 0xff, 0xff, 0x00, 0x03, 0xff, 0xe3, 0xf9, 0xff, 
  29          0xff, 0xff, 0xff, 0xff, 0xff, 0xf2, 0x7f, 0xfe, 0x0f, 0xff, 0xfe, 0x0f, 0xff, 0xe3, 0xf9, 0xff, 
  30          0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x7f, 0xfc, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xe3, 0xf9, 0xff, 
  31          0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xf0, 0x4f, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xf9, 0xff, 
  32          0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xe1, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xf9, 0xff, 
  33          0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc3, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xf1, 0xff, 
  34          0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x87, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xc7, 0xf3, 0xff, 
  35          0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0f, 0xcf, 0xff, 0xff, 0xff, 0xff, 0x8f, 0xe3, 0xff, 
  36          0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x1f, 0xc0, 0x07, 0xff, 0xff, 0xff, 0x0f, 0xc3, 0xff, 
  37          0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x3f, 0xc0, 0x00, 0x1f, 0xff, 0xff, 0x1f, 0x87, 0xff, 
  38          0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xf0, 0x1f, 0xff, 0xff, 0x3c, 0x0f, 0xff, 
  39          0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x01, 0xff, 0xff, 0x9f, 0xff, 0xff, 0x00, 0x1f, 0xff, 
  40          0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0xff, 0xf0, 0x1f, 0xff, 0xff, 0x00, 0xff, 0xff, 
  41          0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x7f, 0xff, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 
  42          0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x7f, 0xfc, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 
  43          0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x3f, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 
  44          0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x3e, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  45          0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x1e, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  46          0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x1c, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  47          0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x98, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  48          0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  49          0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  50          0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  51          0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  52          0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  53          0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
C51 COMPILER V9.59.0.0   DINO                                                              05/23/2020 06:50:41 PAGE 2   

  54          0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  55          0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  56          0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  57          0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  58          0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  59          0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  60          0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  61          0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  62          0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  63          0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  64          0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  65          0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  66          0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  67          0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  68          0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  69          0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  70          0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  71          0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  72          0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff};
  73          
  74          unsigned char str0[]={"Start Game?"};
  75          unsigned char str1[]={"Press Button"};
  76          unsigned char string1[]={"Game Over"};
  77          unsigned char dinosaur[] = {0x00, 0x00, 0x07, 0xfe, 0x07, 0xfe, 0x04, 0x7e, 0x04, 0x7e, 0x07, 0xfe, 0x47, 
             -0x80, 0x6f, 0xf8, 
  78          0x7f, 0xe0, 0x7f, 0xf0, 0x3f, 0xfc, 0x1f, 0xf4, 0x0f, 0xf0, 0x07, 0xe0, 0x02, 0x80, 0x02, 0x80};
  79          
  80          unsigned char blockA[] = {0x00, 0x00, 0x01, 0x80, 0x03, 0xc0, 0x23, 0xc4, 0x23, 0xc4, 0x73, 0xce, 0x73, 0x
             -ce, 0x73, 0xce, 
  81          0x73, 0xce, 0x73, 0xce, 0x73, 0xce, 0x1f, 0xfc, 0x03, 0xc0, 0x03, 0xc0, 0x03, 0xc0, 0x03, 0xc0};
  82          
  83          void delayms(unsigned int time){
  84   1        unsigned int n;
  85   1        while(time>0){
  86   2          n=120;
  87   2          while(n>0){
  88   3            n--;
  89   3          }
  90   2          time--;
  91   2        }
  92   1      }
  93          
  94          void busy(void)
  95          {
  96   1        RS = 0;
  97   1        RW = 1;
  98   1        E = 1;
  99   1        _nop_();
 100   1        while(DB&0x80);
 101   1        E = 0;
 102   1        _nop_();
 103   1      }
 104          
 105          
 106          
 107          void wrins(char instruction){
 108   1        busy();
 109   1        RS = 0;
 110   1        RW = 0;
 111   1        E = 1;
 112   1        _nop_();
 113   1        DB = instruction;
C51 COMPILER V9.59.0.0   DINO                                                              05/23/2020 06:50:41 PAGE 3   

 114   1        _nop_();
 115   1        E = 0;
 116   1        _nop_();
 117   1        
 118   1      }
 119          
 120          void wrdata(char d){
 121   1        busy();
 122   1        RS = 1;
 123   1        RW = 0;
 124   1        E = 1;
 125   1        _nop_();
 126   1        DB = d;
 127   1        _nop_();
 128   1        E = 0;
 129   1        _nop_();
 130   1      }
 131          
 132          void init(void){
 133   1        delayms(50);
 134   1        wrins(0x30);
 135   1        delayms(1);
 136   1        wrins(0x30);
 137   1        delayms(1);
 138   1        wrins(0x0C);
 139   1        delayms(1);
 140   1        wrins(0x01);
 141   1        delayms(10);
 142   1        wrins(0x06);
 143   1        delayms(1);
 144   1        delayms(50);
 145   1        delayms(50);
 146   1        delayms(50);
 147   1        delayms(50);
 148   1        delayms(50);
 149   1        delayms(50);
 150   1        delayms(50);
 151   1        delayms(50);
 152   1        delayms(50);
 153   1        delayms(50);
 154   1        delayms(50);
 155   1      }
 156          
 157          
 158          void display(unsigned char x,unsigned char y,unsigned char * content)
 159          {
 160   1        unsigned char i;
 161   1        if(y==1){i=0x80;}
 162   1        else if(y==2){i=0x90;}
 163   1        else if(y==3){i=0x88;}
 164   1        else if(y==4){i=0x98;}
 165   1        wrins(i+x);
 166   1        for(i=0; i<strlen(content); i++)
 167   1        {
 168   2          wrdata(content[i]);
 169   2        }
 170   1        
 171   1      }
 172          
 173          void DisplayPic(unsigned char code *adder)
 174          {
 175   1      
C51 COMPILER V9.59.0.0   DINO                                                              05/23/2020 06:50:41 PAGE 4   

 176   1         int i,j;
 177   1      
 178   1         for(i=0;i<32;i++)             
 179   1          { 
 180   2            wrins((0x80 + i)); 
 181   2            wrins(0x80);       
 182   2            for(j=0;j<16;j++)
 183   2             {
 184   3               wrdata(*adder);
 185   3               adder++;
 186   3             }
 187   2          }
 188   1      
 189   1         for(i=0;i<32;i++)             
 190   1          {
 191   2            wrins((0x80 + i)); 
 192   2            wrins(0x88);       
 193   2            for(j=0;j<16;j++)
 194   2             {
 195   3               wrdata(*adder);
 196   3               adder++;
 197   3             }
 198   2          }
 199   1      }
 200          
 201          
 202          void block(unsigned char x){
 203   1        unsigned char i;
 204   1        i = 0x9F - x;
 205   1        wrins(i);
 206   1        wrdata(0x00);
 207   1        wrdata(0x02);
 208   1        if(x!=0){
 209   2          wrdata(0x20);
 210   2          wrdata(0x20);
 211   2        }
 212   1      }
 213          
 214          void creat(unsigned char *addr,unsigned char x){
 215   1        int i;
 216   1        wrins(0x40+x);
 217   1        for(i=0;i<32;i++){
 218   2          wrdata(*addr);
 219   2          addr++;
 220   2        }
 221   1      }
 222          
 223          
 224          unsigned char num=0;
 225          int jump=0,dinoX=0,bloX=1;
 226          main(){
 227   1        init();
 228   1        creat(dinosaur,0x00);
 229   1        creat(blockA,0x10);
 230   1        wrins(0x34);
 231   1        DisplayPic(back);
 232   1        wrins(0x30);
 233   1        P0=0xfe;
 234   1        display(1,2,str0);
 235   1        display(1,3,str1);
 236   1        while(1){
 237   2          if(P0_4==0){
C51 COMPILER V9.59.0.0   DINO                                                              05/23/2020 06:50:41 PAGE 5   

 238   3            wrins(0x01);
 239   3            delayms(10);
 240   3            wrins(0x36);
 241   3            wrins(0x30);
 242   3            break;
 243   3          }
 244   2        }
 245   1        wrins(0x98);
 246   1        wrdata(0x00);
 247   1        wrdata(0x00);
 248   1        delayms(1000);
 249   1        
 250   1        while(1){
 251   2          
 252   2          if(P0_4==0){
 253   3            jump=1;
 254   3            P0=0xff;
 255   3          }
 256   2          
 257   2          if(jump==2){
 258   3            
 259   3            if(dinoX==3){
 260   4              wrins(0x90);
 261   4              wrdata(0x00);
 262   4              wrdata(0x00);
 263   4              wrins(0x80);
 264   4              wrdata(0x20);
 265   4              wrdata(0x20);
 266   4              dinoX=2;
 267   4              
 268   4            }else if(dinoX==2){
 269   4              wrins(0x88);
 270   4              wrdata(0x00);
 271   4              wrdata(0x00);
 272   4              wrins(0x90);
 273   4              wrdata(0x20);
 274   4              wrdata(0x20);
 275   4              dinoX=1;
 276   4          
 277   4            }else if(dinoX==1){
 278   4              wrins(0x98);
 279   4              wrdata(0x00);
 280   4              wrdata(0x00);
 281   4              wrins(0x88);
 282   4              wrdata(0x20);
 283   4              wrdata(0x20);
 284   4              dinoX=0;
 285   4              jump=0;
 286   4              P0=0xfe;
 287   4            }
 288   3          }
 289   2          
 290   2          
 291   2          if(jump==1){
 292   3            
 293   3            if(dinoX==0){
 294   4              wrins(0x88);
 295   4              wrdata(0x00);
 296   4              wrdata(0x00);
 297   4              wrins(0x98);
 298   4              wrdata(0x20);
 299   4              wrdata(0x20);
C51 COMPILER V9.59.0.0   DINO                                                              05/23/2020 06:50:41 PAGE 6   

 300   4              dinoX=1;
 301   4              
 302   4            }else if(dinoX==1){
 303   4              wrins(0x90);
 304   4              wrdata(0x00);
 305   4              wrdata(0x00);
 306   4              wrins(0x88);
 307   4              wrdata(0x20);
 308   4              wrdata(0x20);
 309   4              dinoX=2;
 310   4              
 311   4            }else if(dinoX==2){
 312   4              wrins(0x80);
 313   4              wrdata(0x00);
 314   4              wrdata(0x00);
 315   4              wrins(0x90);
 316   4              wrdata(0x20);
 317   4              wrdata(0x20);
 318   4              dinoX=3;
 319   4              jump=2;
 320   4            }
 321   3          }
 322   2          
 323   2          block(num);
 324   2          num++;
 325   2          if(num==8){
 326   3            bloX=0;
 327   3            if(dinoX==bloX){
 328   4              wrins(0x01);
 329   4              delayms(10);
 330   4              wrins(0x36);
 331   4              wrins(0x30);
 332   4              display(0,4,string1);
 333   4              while(1);
 334   4            }
 335   3            num=0;
 336   3          }
 337   2          
 338   2          delayms(400);
 339   2          
 340   2          if(bloX==0){
 341   3          wrins(0x98);
 342   3          wrdata(0x20);
 343   3          wrdata(0x20);
 344   3          bloX=1;
 345   3          }
 346   2          
 347   2        }
 348   1        
 349   1      }
 350          
 351          
 352          
 353          
 354          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    906    ----
   CONSTANT SIZE    =   1024    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
C51 COMPILER V9.59.0.0   DINO                                                              05/23/2020 06:50:41 PAGE 7   

   DATA SIZE        =    106       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
